<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Scanner Stok OP</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        /* Reset CSS */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f5f5;
        }

        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar Styles */
        .sidebar {
            width: 250px;
            background-color: #2c3e50;
            color: white;
            transition: all 0.3s;
        }

        .logo {
            padding: 20px;
            text-align: center;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .menu {
            padding: 20px 0;
        }

        .menu ul {
            list-style: none;
        }

        .menu li a {
            display: flex;
            align-items: center;
            padding: 15px 20px;
            color: white;
            text-decoration: none;
            transition: all 0.3s;
        }

        .menu li a:hover {
            background-color: #34495e;
        }

        .menu li a i {
            margin-right: 10px;
            font-size: 18px;
        }

        .menu li.active a {
            background-color: #3498db;
        }

        /* Main Content Styles */
        .main-content {
            flex: 1;
            background-color: #f9f9f9;
        }

        .topbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 30px;
            background-color: white;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .search-bar {
            display: flex;
        }

        .search-bar input {
            padding: 8px 15px;
            border: 1px solid #ddd;
            border-radius: 4px 0 0 4px;
            outline: none;
        }

        .search-bar button {
            padding: 8px 15px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 0 4px 4px 0;
            cursor: pointer;
        }

        .user-profile {
            display: flex;
            align-items: center;
        }

        .user-profile img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }

        /* Content Styles */
        .content {
            padding: 30px;
        }

        .content h1 {
            margin-bottom: 20px;
            color: #333;
        }

        .cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .card {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .card h3 {
            color: #7f8c8d;
            margin-bottom: 10px;
            font-size: 16px;
        }

        .card p {
            color: #2c3e50;
            font-size: 24px;
            font-weight: bold;
        }

        /* Scanner Section */
        .scanner-section {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
            display: none; /* Awalnya disembunyikan */
        }

        .scanner-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
        }

        #scanner-box {
            width: 100%;
            max-width: 500px;
            height: 300px;
            border: 2px dashed #3498db;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            overflow: hidden;
            background-color: #f9f9f9;
        }

        #scanner-video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        #scanner-canvas {
            position: absolute;
            top: 0;
            left: 0;
        }

        .scanner-controls {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }

        .scanner-controls button {
            padding: 10px 20px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .scanner-controls button:hover {
            background-color: #2980b9;
        }

        .scanner-controls button.stop {
            background-color: #e74c3c;
        }

        .scanner-controls button.stop:hover {
            background-color: #c0392b;
        }

        /* Scan Results */
        .scan-results {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
        }

        .scan-results h2 {
            margin-bottom: 15px;
            color: #333;
        }

        .results-table {
            width: 100%;
            border-collapse: collapse;
        }

        .results-table th, .results-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .results-table th {
            background-color: #f2f2f2;
            font-weight: bold;
        }

        .results-table tr:hover {
            background-color: #f5f5f5;
        }

        /* Dashboard Content */
        .dashboard-content {
            display: block; /* Awalnya ditampilkan */
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .sidebar {
                width: 80px;
            }
            
            .sidebar span {
                display: none;
            }
            
            .menu li a {
                justify-content: center;
            }
            
            .menu li a i {
                margin-right: 0;
                font-size: 20px;
            }
            
            .logo h2 {
                display: none;
            }
            
            .logo::after {
                content: "MA";
                font-size: 20px;
            }

            #scanner-box {
                height: 250px;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar Menu -->
        <aside class="sidebar">
            <div class="logo">
                <h2>Scanner Stok</h2>
            </div>
            <nav class="menu">
                <ul>
                    <li class="active" data-target="dashboard-content">
                        <a href="#">
                            <i class="fas fa-home"></i>
                            <span>Dashboard</span>
                        </a>
                    </li>
                    <li data-target="scanner-section">
                        <a href="#">
                            <i class="fas fa-barcode"></i>
                            <span>Scanner Stok</span>
                        </a>
                    </li>
                    <li>
                        <a href="#">
                            <i class="fas fa-boxes"></i>
                            <span>Manajemen Stok</span>
                        </a>
                    </li>
                    <li>
                        <a href="#">
                            <i class="fas fa-history"></i>
                            <span>Riwayat Scan</span>
                        </a>
                    </li>
                    <li>
                        <a href="#">
                            <i class="fas fa-users"></i>
                            <span>Operator</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <header class="topbar">
                <div class="search-bar">
                    <input type="text" placeholder="Cari item...">
                    <button><i class="fas fa-search"></i></button>
                </div>
                <div class="user-profile">
                    <img src="https://via.placeholder.com/40" alt="Profil Pengguna">
                    <span id="operator-name">Operator Belum Dipilih</span>
                </div>
            </header>

            <div class="content">
                <!-- Dashboard Content -->
                <div id="dashboard-content" class="dashboard-content">
                    <h1>Dashboard Stok Opname</h1>
                    
                    <div class="cards">
                        <div class="card">
                            <h3>Total Stok</h3>
                            <p id="total-stock">0</p>
                        </div>
                        <div class="card">
                            <h3>Stok Hari Ini</h3>
                            <p id="today-stock">0</p>
                        </div>
                        <div class="card">
                            <h3>Operator Aktif</h3>
                            <p id="active-operator">-</p>
                        </div>
                    </div>

                    <div class="scan-results">
                        <h2>Riwayat Stok Terakhir</h2>
                        <table class="results-table">
                            <thead>
                                <tr>
                                    <th>No</th>
                                    <th>Barcode</th>
                                    <th>Nama Barang</th>
                                    <th>Stok</th>
                                    <th>Waktu Scan</th>
                                    <th>Operator</th>
                                </tr>
                            </thead>
                            <tbody id="scan-results-body">
                                <!-- Data akan diisi oleh JavaScript -->
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Scanner Section -->
                <div id="scanner-section" class="scanner-section">
                    <h1>Scanner Stok Opname</h1>
                    
                    <div class="scanner-container">
                        <div id="scanner-box">
                            <video id="scanner-video" playsinline></video>
                            <canvas id="scanner-canvas"></canvas>
                            <p id="scanner-placeholder">Kamera akan aktif saat pemindaian dimulai</p>
                        </div>
                        
                        <div class="operator-input">
                            <label for="operator">Nama Operator:</label>
                            <input type="text" id="operator" placeholder="Masukkan nama operator">
                        </div>
                        
                        <div class="scanner-controls">
                            <button id="start-scan"><i class="fas fa-play"></i> Mulai Scan</button>
                            <button id="stop-scan" class="stop" disabled><i class="fas fa-stop"></i> Stop Scan</button>
                        </div>
                    </div>
                    
                    <div class="scan-results">
                        <h2>Hasil Pemindaian</h2>
                        <table class="results-table">
                            <thead>
                                <tr>
                                    <th>No</th>
                                    <th>Barcode</th>
                                    <th>Nama Barang</th>
                                    <th>Stok</th>
                                    <th>Waktu</th>
                                </tr>
                            </thead>
                            <tbody id="scanner-results-body">
                                <!-- Hasil scan akan muncul di sini -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Element references
            const operatorInput = document.getElementById('operator');
            const operatorNameDisplay = document.getElementById('operator-name');
            const activeOperatorDisplay = document.getElementById('active-operator');
            const startScanBtn = document.getElementById('start-scan');
            const stopScanBtn = document.getElementById('stop-scan');
            const scannerVideo = document.getElementById('scanner-video');
            const scannerCanvas = document.getElementById('scanner-canvas');
            const scannerPlaceholder = document.getElementById('scanner-placeholder');
            const scanResultsBody = document.getElementById('scan-results-body');
            const scannerResultsBody = document.getElementById('scanner-results-body');
            const totalStockDisplay = document.getElementById('total-stock');
            const todayStockDisplay = document.getElementById('today-stock');
            const dashboardContent = document.getElementById('dashboard-content');
            const scannerSection = document.getElementById('scanner-section');
            
            // Sample data
            const sampleItems = [
                { barcode: '123456789', name: 'Produk A', stock: 15 },
                { barcode: '987654321', name: 'Produk B', stock: 8 },
                { barcode: '456123789', name: 'Produk C', stock: 22 }
            ];
            
            let scanResults = [];
            let stream = null;
            let scanInterval = null;
            let currentOperator = '';
            
            // Menu navigation
            const menuItems = document.querySelectorAll('.menu li');
            menuItems.forEach(item => {
                item.addEventListener('click', function() {
                    const target = this.getAttribute('data-target');
                    
                    // Update active menu
                    menuItems.forEach(i => i.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Show/hide sections
                    if (target === 'dashboard-content') {
                        dashboardContent.style.display = 'block';
                        scannerSection.style.display = 'none';
                        stopScanner(); // Stop scanner if active
                    } else if (target === 'scanner-section') {
                        dashboardContent.style.display = 'none';
                        scannerSection.style.display = 'block';
                    }
                });
            });
            
            // Operator name handling
            operatorInput.addEventListener('change', function() {
                currentOperator = this.value.trim();
                if (currentOperator) {
                    operatorNameDisplay.textContent = currentOperator;
                    activeOperatorDisplay.textContent = currentOperator;
                    localStorage.setItem('lastOperator', currentOperator);
                }
            });
            
            // Load last operator from localStorage
            const lastOperator = localStorage.getItem('lastOperator');
            if (lastOperator) {
                operatorInput.value = lastOperator;
                currentOperator = lastOperator;
                operatorNameDisplay.textContent = lastOperator;
                activeOperatorDisplay.textContent = lastOperator;
            }
            
            // Scanner functionality
            startScanBtn.addEventListener('click', startScanner);
            stopScanBtn.addEventListener('click', stopScanner);
            
            function startScanner() {
                if (!currentOperator) {
                    alert('Silakan masukkan nama operator terlebih dahulu!');
                    operatorInput.focus();
                    return;
                }
                
                scannerPlaceholder.style.display = 'none';
                startScanBtn.disabled = true;
                stopScanBtn.disabled = false;
                
                // Access camera
                navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } })
                    .then(function(s) {
                        stream = s;
                        scannerVideo.srcObject = stream;
                        scannerVideo.play();
                        
                        // Start scanning periodically
                        scanInterval = setInterval(scanBarcode, 1000);
                    })
                    .catch(function(err) {
                        console.error("Error accessing camera: ", err);
                        alert('Tidak dapat mengakses kamera. Pastikan izin kamera diberikan.');
                        resetScanner();
                    });
            }
            
            function stopScanner() {
                resetScanner();
            }
            
            function resetScanner() {
                if (scanInterval) {
                    clearInterval(scanInterval);
                    scanInterval = null;
                }
                
                if (stream) {
                    stream.getTracks().forEach(track => track.stop());
                    stream = null;
                    scannerVideo.srcObject = null;
                }
                
                scannerPlaceholder.style.display = 'block';
                startScanBtn.disabled = false;
                stopScanBtn.disabled = true;
            }
            
            function scanBarcode() {
                const canvas = scannerCanvas;
                const video = scannerVideo;
                const context = canvas.getContext('2d');
                
                // Set canvas size to video size
                canvas.width = video.videoWidth;
                canvas.height = video.videoHeight;
                
                // Draw video frame to canvas
                context.drawImage(video, 0, 0, canvas.width, canvas.height);
                
                // In a real app, you would use a barcode scanning library here
                // For demo, we'll simulate finding a barcode
                simulateBarcodeScan();
            }
            
            function simulateBarcodeScan() {
                // Simulate scanning with a random chance to find a barcode
                if (Math.random() > 0.7) {
                    const randomItem = sampleItems[Math.floor(Math.random() * sampleItems.length)];
                    const scanTime = new Date().toLocaleTimeString();
                    
                    // Add to results
                    const scanData = {
                        barcode: randomItem.barcode,
                        name: randomItem.name,
                        stock: randomItem.stock,
                        time: scanTime,
                        operator: currentOperator
                    };
                    
                    scanResults.unshift(scanData);
                    
                    // Update UI
                    updateScanResults();
                    updateScannerResults(scanData);
                    updateStockCounts();
                    
                    // Play success sound (in a real app)
                    // new Audio('beep.mp3').play();
                }
            }
            
            function updateScanResults() {
                scanResultsBody.innerHTML = '';
                
                scanResults.slice(0, 5).forEach((result, index) => {
                    const row = document.createElement('tr');
                    
                    row.innerHTML = `
                        <td>${index + 1}</td>
                        <td>${result.barcode}</td>
                        <td>${result.name}</td>
                        <td>${result.stock}</td>
                        <td>${result.time}</td>
                        <td>${result.operator}</td>
                    `;
                    
                    scanResultsBody.appendChild(row);
                });
            }
            
            function updateScannerResults(scanData) {
                const row = document.createElement('tr');
                
                row.innerHTML = `
                    <td>${scannerResultsBody.children.length + 1}</td>
                    <td>${scanData.barcode}</td>
                    <td>${scanData.name}</td>
                    <td>${scanData.stock}</td>
                    <td>${scanData.time}</td>
                `;
                
                scannerResultsBody.prepend(row);
            }
            
            function updateStockCounts() {
                totalStockDisplay.textContent = scanResults.length;
                
                // Count today's scans (in a real app, you would filter by date)
                const todayCount = scanResults.length; // Simplified for demo
                todayStockDisplay.textContent = todayCount;
            }
            
            // Initialize with some sample data for demo
            function initSampleData() {
                const now = new Date();
                const scanTime = now.toLocaleTimeString();
                
                sampleItems.forEach(item => {
                    scanResults.push({
                        barcode: item.barcode,
                        name: item.name,
                        stock: item.stock,
                        time: scanTime,
                        operator: lastOperator || 'Demo Operator'
                    });
                });
                
                updateScanResults();
                updateStockCounts();
            }
            
            // Initialize with sample data for demo purposes
            initSampleData();
        });
    </script>
</body>
</html>
